//
//  CoreDataManagerTests.swift
//  PlanetsTests
//
//  Created by Pip Elise Russell on 12/10/2019.
//  Copyright Â© 2019 Pip Elise Russell. All rights reserved.
//

import XCTest
import CoreData
@testable import Planets

class CoreDataManagerTests: XCTestCase {
    
    var manager: CoreDataManager!
    
    override func setUp() {
        super.setUp()
        manager = CoreDataManager()
    }
    
    override func tearDown() {
        let delete = NSBatchDeleteRequest(fetchRequest: NSFetchRequest<NSFetchRequestResult>(entityName: "Planet"))
        do {
            try manager.persistentContainer.viewContext.execute(delete)
        } catch {
            print("Tests are broken, please fix them")
        }
    }
    
    func addPlanet() {
        if let planetEntity = NSEntityDescription.entity(forEntityName: "Planet", in: manager.persistentContainer.viewContext) {
            let planet = NSManagedObject(entity: planetEntity, insertInto: manager.persistentContainer.viewContext)
            planet.setValue("Test", forKey: "name")
        }
    }
    func testSaveContext() {
        addPlanet()
        
        XCTAssertNoThrow(manager.saveContext())
    }
    
    func testFetchAllPlanet() {
        XCTAssert(manager.fetchAllPlanets() == [])
        
        addPlanet()
        
        XCTAssert(manager.fetchAllPlanets().count == 1)
    }
    
    func testSavePlanetSmall() {
        let planet = ["name":"Test", "population" : "15"]
        manager.savePlanet(json: planet)
        
        XCTAssert(manager.fetchAllPlanets().count == 1)
        let savedPlanet = manager.fetchAllPlanets()[0]
        
        XCTAssert(savedPlanet.name == "Test")
        XCTAssert(savedPlanet.population == 15)
    }
    
    func testSavePlanetBig() {
        //data generated by borrowing some actual api data and changing it
        let planet = ["name": "Alterra",
                      "rotation_period": "15",
                      "orbital_period": "768",
                      "diameter": "25000",
                      "climate": "dead",
                      "gravity": "3 standard",
                      "terrain": "wasteland",
                      "surface_water": "0",
                      "population": "5000",
                      "residents": [
                        "https://swapi.co/api/people/3/",
                        "https://swapi.co/api/people/100/",
                        "https://swapi.co/api/people/25/"
            ],
                      "films": [
                        "https://swapi.co/api/films/8/"
            ],
                      "created": "2014-12-10T11:35:48.479000Z",
                      "edited": "2014-12-20T20:58:18.420000Z",
                      "url": "https://swapi.co/api/planets/1/"] as [String : Any]
        
        manager.savePlanet(json: planet)
        
        XCTAssert(manager.fetchAllPlanets().count == 1)
        let savedPlanet = manager.fetchAllPlanets()[0]
        
        XCTAssert(savedPlanet.name == "Alterra")
        XCTAssert(savedPlanet.rotationPeriod == 15)
        XCTAssert(savedPlanet.orbitalPeriod == 768)
        XCTAssert(savedPlanet.diameter == 25000)
        XCTAssert(savedPlanet.climate == "dead")
        XCTAssert(savedPlanet.gravity == "3 standard")
        XCTAssert(savedPlanet.terrain == "wasteland")
        XCTAssert(savedPlanet.surfaceWater == 0)
        XCTAssert(savedPlanet.population == 5000)
        XCTAssert(savedPlanet.created == Date(timeIntervalSinceReferenceDate: 439904148.4790001))
        XCTAssert(savedPlanet.edited == Date(timeIntervalSinceReferenceDate: 440801898.4200001))
        XCTAssert(savedPlanet.url == URL(string: "https://swapi.co/api/planets/1/"))
    }
}
